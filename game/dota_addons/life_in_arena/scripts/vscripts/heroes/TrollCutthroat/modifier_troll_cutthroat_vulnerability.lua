
modifier_troll_cutthroat_vulnerability = class({})

--------------------------------------------------------------------------------

function modifier_troll_cutthroat_vulnerability:IsHidden()
	return true
end

--------------------------------------------------------------------------------

function modifier_troll_cutthroat_vulnerability:IsPurgable()
	return false
end

--------------------------------------------------------------------------------

function modifier_troll_cutthroat_vulnerability:OnCreated( kv )
	self.crit_chance = self:GetAbility():GetSpecialValueFor( "crit_chance" )
	self.crit_multiplier = self:GetAbility():GetSpecialValueFor( "crit_multiplier" )
	self.duration = self:GetAbility():GetSpecialValueFor( "duration" )

	if IsServer() then
		self.pseudo = PseudoRandom:New(self.crit_chance*0.01)
		self.bIsCrit = false
	end
end

--------------------------------------------------------------------------------

function modifier_troll_cutthroat_vulnerability:OnRefresh( kv )
	self.crit_chance = self:GetAbility():GetSpecialValueFor( "crit_chance" )
	self.crit_multiplier = self:GetAbility():GetSpecialValueFor( "crit_multiplier" )
	self.duration = self:GetAbility():GetSpecialValueFor( "duration" )

	if IsServer() then
		self.pseudo = PseudoRandom:New(self.crit_chance*0.01)
		self.bIsCrit = false
	end
end

--------------------------------------------------------------------------------

function modifier_troll_cutthroat_vulnerability:DeclareFunctions()
	local funcs =
	{
		MODIFIER_PROPERTY_PREATTACK_CRITICALSTRIKE,
		MODIFIER_EVENT_ON_ATTACK_LANDED,
	}
	return funcs
end

--------------------------------------------------------------------------------

function modifier_troll_cutthroat_vulnerability:GetModifierPreAttack_CriticalStrike( params )
	local hTarget = params.target
	local hAttacker = params.attacker

	if self:GetParent():PassivesDisabled() then
		return 
	end

	if hTarget and ( hTarget:IsBuilding() == false ) and ( hTarget:IsOther() == false ) and hAttacker and ( hAttacker:GetTeamNumber() ~= hTarget:GetTeamNumber() ) then
		if self.pseudo:Trigger() then 
			self.critRecord = params.record
			return self.crit_multiplier
		end
	end
end

--------------------------------------------------------------------------------

function modifier_troll_cutthroat_vulnerability:OnAttackLanded( params )
	if IsServer() then
		-- play sounds and stuff
		if self:GetParent() == params.attacker then
			if self:GetParent():PassivesDisabled() then
				return 0
			end

			local hTarget = params.target
			if hTarget ~= nil and self.critRecord == params.record then
				hTarget:AddNewModifier(self:GetParent(), self:GetAbility(), "modifier_troll_cutthroat_vulnerability_debuff", {duration = self.duration})
				EmitSoundOn( "DOTA_Item.Daedelus.Crit", self:GetParent() )   
			end
		end
	end
end
